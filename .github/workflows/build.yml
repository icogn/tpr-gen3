# Note that the artifacts which have names that are a long string of random
# characters are for combining the matrix output for each OS
name: Website Artifact
on:
  workflow_dispatch:
  push:
    branches:
      - 'release/**'
      # - main

jobs:
  get_environment_name:
    runs-on: ubuntu-latest
    outputs:
      env: '${{ steps.regex-match.outputs.group1 }}'
    steps:
      - uses: kaisugi/action-regex-match@v1.0.1
        name: Get environment name from branch name
        id: regex-match
        with:
          text: ${{ github.ref_name }}
          regex: '^release\/([a-z]+)$'

      - if: ${{ steps.regex-match.outputs.group1 == '' }}
        name: Exit if invalid environment name
        run: exit 1

  increment_validate_version:
    needs: [get_environment_name]
    runs-on: [ubuntu-latest]
    environment: ${{ needs.get_environment_name.outputs.env }}
    outputs:
      env: ${{ needs.get_environment_name.outputs.env }}
      version: ${{ steps.create-version-string.outputs.version }}
    steps:
      - run: echo ${{ github.sha }}
        name: Echo github.sha

      - run: echo ${{ needs.get_environment_name.outputs.env }}

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'
          cache: 'yarn'

      - run: yarn --immutable

      # Increment the build number ASAP (once we have a valid environment and yarn has run)
      # Important to use `steps.increment.outputs.value` and not vars.BUILD_NUMBER after this.
      # vars.BUILD_NUMBER does not reflect the changed value.
      - uses: ./scripts/workflows/increment
        name: Increment build number
        id: increment
        with:
          name: 'BUILD_NUMBER'
          token: ${{ secrets.GH_PAT }}
          environment: ${{ needs.get_environment_name.outputs.env }}

      # - uses: martinbeentjes/npm-get-version-action@v1.3.1
      #   id: package-version
      #   name: Get root package.json version

      - uses: ./scripts/workflows/package-version
        id: package-version
        name: Get root package.json version

      - uses: kaisugi/action-regex-match@v1.0.1
        name: Check package.json version is valid
        id: regex-match-version
        with:
          text: ${{ steps.package-version.outputs.value }}
          regex: '^\d+\.\d+\.\d+$'

      - if: ${{ steps.regex-match-version.outputs.match == '' }}
        name: Exit if invalid package.json version
        run: exit 1

      - run: echo ${{ steps.package-version.outputs.value }}
        name: Echo root package.json version

      - name: Create version string
        id: create-version-string
        run: echo "version=${{ steps.package-version.outputs.value }}-${{ needs.get_environment_name.outputs.env }}.${{ steps.increment.outputs.value }}" >> $GITHUB_OUTPUT

      - uses: matt-usurp/validate-semver@v2
        id: semver
        with:
          version: ${{ steps.create-version-string.outputs.version }}

  build_website:
    needs: [increment_validate_version]
    environment: ${{ needs.increment_validate_version.outputs.env }}
    outputs:
      env: ${{ needs.increment_validate_version.outputs.env }}
      version: ${{ needs.increment_validate_version.outputs.version }}
    strategy:
      fail-fast: true
      matrix:
        # os: [ubuntu-latest]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - run: echo ${{ github.sha }}
        name: Echo github.sha

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'
          cache: 'yarn'

      - run: yarn --immutable

      - run: yarn --cwd website run build

      - uses: ./scripts/workflows/create-output
        id: web-zip-name
        with:
          input: web-${{ matrix.os }}

      - uses: ./scripts/workflows/create-output
        id: web-zip-nameext
        with:
          input: ${{ steps.web-zip-name.outputs.value }}.zip

      - uses: vimtor/action-zip@v1.2
        with:
          files: website/.next/standalone
          dest: downloadedArtifacts/${{ steps.web-zip-nameext.outputs.value }}

      - uses: ./scripts/workflows/sign-files
        id: sign-files
        with:
          privateKey: ${{ secrets.PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          file: downloadedArtifacts/${{ steps.web-zip-nameext.outputs.value }}

      - name: Get rust triple
        uses: ./scripts/workflows/get-rust-triple
        id: rust-triple

      - name: Display structure of downloaded files
        run: ls -R downloadedArtifacts

      - name: Upload Artifact
        id: upload-web-zip
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.web-zip-name.outputs.value }}
          path: downloadedArtifacts/${{ steps.web-zip-nameext.outputs.value }}

      - run: echo ${{ steps.upload-web-zip.outputs.artifact-url }}

      ## Write for matrix outputs workaround
      - uses: cloudposse/github-action-matrix-outputs-write@v1
        id: out
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: ${{ matrix.os }}
          outputs: |-
            web-zip-url: ${{ steps.upload-web-zip.outputs.artifact-url }}
            web-zip-sig: ${{ steps.sign-files.outputs.value }}
            triple: ${{ steps.rust-triple.outputs.triple }}
            name: ${{ steps.web-zip-name.outputs.value }}

      # At the end, set/create var in environment for the "1.2.3" of this build.
      # Probably in another job since this one is a matrix.

  read_workflow:
    needs: [build_website]
    runs-on: ubuntu-latest
    outputs:
      result: '${{ steps.read.outputs.result }}'
      env: ${{ needs.build_website.outputs.env }}
      version: ${{ needs.build_website.outputs.version }}
    steps:
      ## Read matrix outputs
      - uses: cloudposse/github-action-matrix-outputs-read@v1
        id: read
        with:
          matrix-step-name: build_website
      - run: echo ${{ steps.read.outputs.result }}

  # THIS one was before changing to trigger. Reusable was not what we were looking for.
  # runs_reusable_workflow:
  #   needs: [read_workflow]
  #   uses: icogn/tpr-gen3/.github/workflows/reusable.yml@main
  #   with:
  #     input_one: ${{ needs.read_workflow.outputs.result }}

  trigger_pull_artifact_workflow:
    needs: [read_workflow]
    runs-on: ubuntu-latest
    environment: ${{ needs.read_workflow.outputs.env }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/checkout@v4
        with:
          ref: 'config_branch'
          path: 'config_branch'

      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: '20.17.0'
      #     cache: 'yarn'

      # # - uses: qoomon/actions--context@v2
      # #   name: Get environment name as var
      # #   id: context

      # - run: yarn --immutable

      - uses: ./scripts/workflows/trigger-pull-artifacts
        name: Trigger pull artifacts in central repo
        with:
          # https://docs.github.com/en/rest/repos/repos?apiVersion=2022-11-28#create-a-repository-dispatch-event
          # Note that the fine-grained token needs `"Contents" repository permissions (write)`
          token: ${{ secrets.GH_PAT }}
          branch: ${{ needs.read_workflow.outputs.env }}
          version: ${{ needs.read_workflow.outputs.version }}
          artifactInfo: ${{ needs.read_workflow.outputs.result }}
          privateKey: ${{ secrets.PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
